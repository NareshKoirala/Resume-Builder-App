// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using resume_builder_api.Services;

#nullable disable

namespace resume_builder_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.CertificateEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CertificateName")
                        .HasColumnType("text");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("CertificateEntries");
                });

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.EducationEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("EducationEntries");
                });

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.ProjectEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("ProjectEntries");
                });

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.SkillEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("SkillName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("SkillEntries");
                });

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobField")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LinkedInUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PortfolioUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PublicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("encode(gen_random_bytes(8), 'hex')");

                    b.Property<string>("UserSummary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PublicId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.WorkEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserModelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId");

                    b.ToTable("WorkEntries");
                });

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.CertificateEntry", b =>
                {
                    b.HasOne("Desktop.Resume_Builder_API.resume_builder_api.Models.UserModel", null)
                        .WithMany("Certificates")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.EducationEntry", b =>
                {
                    b.HasOne("Desktop.Resume_Builder_API.resume_builder_api.Models.UserModel", null)
                        .WithMany("Education")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.ProjectEntry", b =>
                {
                    b.HasOne("Desktop.Resume_Builder_API.resume_builder_api.Models.UserModel", null)
                        .WithMany("Projects")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.SkillEntry", b =>
                {
                    b.HasOne("Desktop.Resume_Builder_API.resume_builder_api.Models.UserModel", null)
                        .WithMany("Skills")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.WorkEntry", b =>
                {
                    b.HasOne("Desktop.Resume_Builder_API.resume_builder_api.Models.UserModel", null)
                        .WithMany("WorkExperience")
                        .HasForeignKey("UserModelId");
                });

            modelBuilder.Entity("Desktop.Resume_Builder_API.resume_builder_api.Models.UserModel", b =>
                {
                    b.Navigation("Certificates");

                    b.Navigation("Education");

                    b.Navigation("Projects");

                    b.Navigation("Skills");

                    b.Navigation("WorkExperience");
                });
#pragma warning restore 612, 618
        }
    }
}
